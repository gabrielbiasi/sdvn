//
// Generated file, do not edit! Created by nedtool 5.0 from messages/NeighborMessage.msg.
//

#ifndef __NEIGHBORMESSAGE_M_H
#define __NEIGHBORMESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>messages/NeighborMessage.msg:1</tt> by nedtool.
 * <pre>
 * message NeighborMessage
 * {
 *     int sourceVehicle;
 *     simtime_t timestamp;
 *     int neighbors[];
 * }
 * </pre>
 */
class NeighborMessage : public ::omnetpp::cMessage
{
  protected:
    int sourceVehicle;
    ::omnetpp::simtime_t timestamp;
    int *neighbors; // array ptr
    unsigned int neighbors_arraysize;

  private:
    void copy(const NeighborMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const NeighborMessage&);

  public:
    NeighborMessage(const char *name=nullptr, int kind=0);
    NeighborMessage(const NeighborMessage& other);
    virtual ~NeighborMessage();
    NeighborMessage& operator=(const NeighborMessage& other);
    virtual NeighborMessage *dup() const {return new NeighborMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual int getSourceVehicle() const;
    virtual void setSourceVehicle(int sourceVehicle);
    virtual ::omnetpp::simtime_t getTimestamp() const;
    virtual void setTimestamp(::omnetpp::simtime_t timestamp);
    virtual void setNeighborsArraySize(unsigned int size);
    virtual unsigned int getNeighborsArraySize() const;
    virtual int getNeighbors(unsigned int k) const;
    virtual void setNeighbors(unsigned int k, int neighbors);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const NeighborMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, NeighborMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __NEIGHBORMESSAGE_M_H

