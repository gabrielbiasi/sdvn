//
// Generated file, do not edit! Created by nedtool 5.0 from messages/AppMessage.msg.
//

#ifndef __APPMESSAGE_M_H
#define __APPMESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "veins/modules/messages/WaveShortMessage_m.h"
// }}

/**
 * Class generated from <tt>messages/AppMessage.msg:7</tt> by nedtool.
 * <pre>
 * message AppMessage extends WaveShortMessage
 * {
 *     long id;
 *     long sourceAddress;
 *     long destinationAddress;
 *     long TTL;
 *     string payload;
 * }
 * </pre>
 */
class AppMessage : public ::WaveShortMessage
{
  protected:
    long id;
    long sourceAddress;
    long destinationAddress;
    long TTL;
    ::omnetpp::opp_string payload;

  private:
    void copy(const AppMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const AppMessage&);

  public:
    AppMessage(const char *name=nullptr, int kind=0);
    AppMessage(const AppMessage& other);
    virtual ~AppMessage();
    AppMessage& operator=(const AppMessage& other);
    virtual AppMessage *dup() const {return new AppMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual long getId() const;
    virtual void setId(long id);
    virtual long getSourceAddress() const;
    virtual void setSourceAddress(long sourceAddress);
    virtual long getDestinationAddress() const;
    virtual void setDestinationAddress(long destinationAddress);
    virtual long getTTL() const;
    virtual void setTTL(long TTL);
    virtual const char * getPayload() const;
    virtual void setPayload(const char * payload);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const AppMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, AppMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __APPMESSAGE_M_H

